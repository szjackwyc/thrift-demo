<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.test.model.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="img_width" property="imgWidth" jdbcType="INTEGER" />
    <result column="img_height" property="imgHeight" jdbcType="INTEGER" />
    <result column="desc_img" property="descImg" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="postage" property="postage" jdbcType="DECIMAL" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="sales" property="sales" jdbcType="BIGINT" />
    <result column="archive" property="archive" jdbcType="BIT" />
    <result column="recommend" property="recommend" jdbcType="TINYINT" />
    <result column="recommend_at" property="recommendAt" jdbcType="TIMESTAMP" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="is_commission" property="isCommission" jdbcType="BIT" />
    <result column="commission_rate" property="commissionRate" jdbcType="DECIMAL" />
    <result column="forsale_at" property="forsaleAt" jdbcType="TIMESTAMP" />
    <result column="onsale_at" property="onsaleAt" jdbcType="TIMESTAMP" />
    <result column="instock_at" property="instockAt" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="fake_sales" property="fakeSales" jdbcType="BIGINT" />
    <result column="isDelay" property="isdelay" jdbcType="TINYINT" />
    <result column="delayDays" property="delaydays" jdbcType="INTEGER" />
    <result column="update_lock" property="updateLock" jdbcType="BIT" />
    <result column="synchronousFlag" property="synchronousflag" jdbcType="VARCHAR" />
    <result column="third_item_id" property="thirdItemId" jdbcType="VARCHAR" />
    <result column="partner_product_id" property="partnerProductId" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.test.model.Product" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, shop_id, name, img, img_width, img_height, desc_img, status, market_price, 
    price, postage, amount, sales, archive, recommend, recommend_at, discount, is_commission, 
    commission_rate, forsale_at, onsale_at, instock_at, created_at, updated_at, fake_sales, 
    isDelay, delayDays, update_lock, synchronousFlag, third_item_id, partner_product_id, 
    code
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.test.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vdlm_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vdlm_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vdlm_product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from vdlm_product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.model.ProductExample" >
    delete from vdlm_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.model.Product" >
    insert into vdlm_product (id, user_id, shop_id, 
      name, img, img_width, 
      img_height, desc_img, status, 
      market_price, price, postage, 
      amount, sales, archive, recommend, 
      recommend_at, discount, is_commission, 
      commission_rate, forsale_at, onsale_at, 
      instock_at, created_at, updated_at, 
      fake_sales, isDelay, delayDays, 
      update_lock, synchronousFlag, third_item_id, 
      partner_product_id, code, description
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{imgWidth,jdbcType=INTEGER}, 
      #{imgHeight,jdbcType=INTEGER}, #{descImg,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{marketPrice,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, #{postage,jdbcType=DECIMAL}, 
      #{amount,jdbcType=BIGINT}, #{sales,jdbcType=BIGINT}, #{archive,jdbcType=BIT}, #{recommend,jdbcType=TINYINT}, 
      #{recommendAt,jdbcType=TIMESTAMP}, #{discount,jdbcType=DECIMAL}, #{isCommission,jdbcType=BIT}, 
      #{commissionRate,jdbcType=DECIMAL}, #{forsaleAt,jdbcType=TIMESTAMP}, #{onsaleAt,jdbcType=TIMESTAMP}, 
      #{instockAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{fakeSales,jdbcType=BIGINT}, #{isdelay,jdbcType=TINYINT}, #{delaydays,jdbcType=INTEGER}, 
      #{updateLock,jdbcType=BIT}, #{synchronousflag,jdbcType=VARCHAR}, #{thirdItemId,jdbcType=VARCHAR}, 
      #{partnerProductId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.model.Product" >
    insert into vdlm_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="imgWidth != null" >
        img_width,
      </if>
      <if test="imgHeight != null" >
        img_height,
      </if>
      <if test="descImg != null" >
        desc_img,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="marketPrice != null" >
        market_price,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="postage != null" >
        postage,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="sales != null" >
        sales,
      </if>
      <if test="archive != null" >
        archive,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="recommendAt != null" >
        recommend_at,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="isCommission != null" >
        is_commission,
      </if>
      <if test="commissionRate != null" >
        commission_rate,
      </if>
      <if test="forsaleAt != null" >
        forsale_at,
      </if>
      <if test="onsaleAt != null" >
        onsale_at,
      </if>
      <if test="instockAt != null" >
        instock_at,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="fakeSales != null" >
        fake_sales,
      </if>
      <if test="isdelay != null" >
        isDelay,
      </if>
      <if test="delaydays != null" >
        delayDays,
      </if>
      <if test="updateLock != null" >
        update_lock,
      </if>
      <if test="synchronousflag != null" >
        synchronousFlag,
      </if>
      <if test="thirdItemId != null" >
        third_item_id,
      </if>
      <if test="partnerProductId != null" >
        partner_product_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="imgWidth != null" >
        #{imgWidth,jdbcType=INTEGER},
      </if>
      <if test="imgHeight != null" >
        #{imgHeight,jdbcType=INTEGER},
      </if>
      <if test="descImg != null" >
        #{descImg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null" >
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="postage != null" >
        #{postage,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="sales != null" >
        #{sales,jdbcType=BIGINT},
      </if>
      <if test="archive != null" >
        #{archive,jdbcType=BIT},
      </if>
      <if test="recommend != null" >
        #{recommend,jdbcType=TINYINT},
      </if>
      <if test="recommendAt != null" >
        #{recommendAt,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="isCommission != null" >
        #{isCommission,jdbcType=BIT},
      </if>
      <if test="commissionRate != null" >
        #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="forsaleAt != null" >
        #{forsaleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="onsaleAt != null" >
        #{onsaleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="instockAt != null" >
        #{instockAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fakeSales != null" >
        #{fakeSales,jdbcType=BIGINT},
      </if>
      <if test="isdelay != null" >
        #{isdelay,jdbcType=TINYINT},
      </if>
      <if test="delaydays != null" >
        #{delaydays,jdbcType=INTEGER},
      </if>
      <if test="updateLock != null" >
        #{updateLock,jdbcType=BIT},
      </if>
      <if test="synchronousflag != null" >
        #{synchronousflag,jdbcType=VARCHAR},
      </if>
      <if test="thirdItemId != null" >
        #{thirdItemId,jdbcType=VARCHAR},
      </if>
      <if test="partnerProductId != null" >
        #{partnerProductId,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from vdlm_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vdlm_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.imgWidth != null" >
        img_width = #{record.imgWidth,jdbcType=INTEGER},
      </if>
      <if test="record.imgHeight != null" >
        img_height = #{record.imgHeight,jdbcType=INTEGER},
      </if>
      <if test="record.descImg != null" >
        desc_img = #{record.descImg,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null" >
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.postage != null" >
        postage = #{record.postage,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.sales != null" >
        sales = #{record.sales,jdbcType=BIGINT},
      </if>
      <if test="record.archive != null" >
        archive = #{record.archive,jdbcType=BIT},
      </if>
      <if test="record.recommend != null" >
        recommend = #{record.recommend,jdbcType=TINYINT},
      </if>
      <if test="record.recommendAt != null" >
        recommend_at = #{record.recommendAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.isCommission != null" >
        is_commission = #{record.isCommission,jdbcType=BIT},
      </if>
      <if test="record.commissionRate != null" >
        commission_rate = #{record.commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="record.forsaleAt != null" >
        forsale_at = #{record.forsaleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.onsaleAt != null" >
        onsale_at = #{record.onsaleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.instockAt != null" >
        instock_at = #{record.instockAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fakeSales != null" >
        fake_sales = #{record.fakeSales,jdbcType=BIGINT},
      </if>
      <if test="record.isdelay != null" >
        isDelay = #{record.isdelay,jdbcType=TINYINT},
      </if>
      <if test="record.delaydays != null" >
        delayDays = #{record.delaydays,jdbcType=INTEGER},
      </if>
      <if test="record.updateLock != null" >
        update_lock = #{record.updateLock,jdbcType=BIT},
      </if>
      <if test="record.synchronousflag != null" >
        synchronousFlag = #{record.synchronousflag,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdItemId != null" >
        third_item_id = #{record.thirdItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerProductId != null" >
        partner_product_id = #{record.partnerProductId,jdbcType=BIGINT},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update vdlm_product
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      img_width = #{record.imgWidth,jdbcType=INTEGER},
      img_height = #{record.imgHeight,jdbcType=INTEGER},
      desc_img = #{record.descImg,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      postage = #{record.postage,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=BIGINT},
      archive = #{record.archive,jdbcType=BIT},
      recommend = #{record.recommend,jdbcType=TINYINT},
      recommend_at = #{record.recommendAt,jdbcType=TIMESTAMP},
      discount = #{record.discount,jdbcType=DECIMAL},
      is_commission = #{record.isCommission,jdbcType=BIT},
      commission_rate = #{record.commissionRate,jdbcType=DECIMAL},
      forsale_at = #{record.forsaleAt,jdbcType=TIMESTAMP},
      onsale_at = #{record.onsaleAt,jdbcType=TIMESTAMP},
      instock_at = #{record.instockAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      fake_sales = #{record.fakeSales,jdbcType=BIGINT},
      isDelay = #{record.isdelay,jdbcType=TINYINT},
      delayDays = #{record.delaydays,jdbcType=INTEGER},
      update_lock = #{record.updateLock,jdbcType=BIT},
      synchronousFlag = #{record.synchronousflag,jdbcType=VARCHAR},
      third_item_id = #{record.thirdItemId,jdbcType=VARCHAR},
      partner_product_id = #{record.partnerProductId,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vdlm_product
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      img_width = #{record.imgWidth,jdbcType=INTEGER},
      img_height = #{record.imgHeight,jdbcType=INTEGER},
      desc_img = #{record.descImg,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      postage = #{record.postage,jdbcType=DECIMAL},
      amount = #{record.amount,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=BIGINT},
      archive = #{record.archive,jdbcType=BIT},
      recommend = #{record.recommend,jdbcType=TINYINT},
      recommend_at = #{record.recommendAt,jdbcType=TIMESTAMP},
      discount = #{record.discount,jdbcType=DECIMAL},
      is_commission = #{record.isCommission,jdbcType=BIT},
      commission_rate = #{record.commissionRate,jdbcType=DECIMAL},
      forsale_at = #{record.forsaleAt,jdbcType=TIMESTAMP},
      onsale_at = #{record.onsaleAt,jdbcType=TIMESTAMP},
      instock_at = #{record.instockAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      fake_sales = #{record.fakeSales,jdbcType=BIGINT},
      isDelay = #{record.isdelay,jdbcType=TINYINT},
      delayDays = #{record.delaydays,jdbcType=INTEGER},
      update_lock = #{record.updateLock,jdbcType=BIT},
      synchronousFlag = #{record.synchronousflag,jdbcType=VARCHAR},
      third_item_id = #{record.thirdItemId,jdbcType=VARCHAR},
      partner_product_id = #{record.partnerProductId,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.model.Product" >
    update vdlm_product
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="imgWidth != null" >
        img_width = #{imgWidth,jdbcType=INTEGER},
      </if>
      <if test="imgHeight != null" >
        img_height = #{imgHeight,jdbcType=INTEGER},
      </if>
      <if test="descImg != null" >
        desc_img = #{descImg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null" >
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="postage != null" >
        postage = #{postage,jdbcType=DECIMAL},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="sales != null" >
        sales = #{sales,jdbcType=BIGINT},
      </if>
      <if test="archive != null" >
        archive = #{archive,jdbcType=BIT},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend,jdbcType=TINYINT},
      </if>
      <if test="recommendAt != null" >
        recommend_at = #{recommendAt,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="isCommission != null" >
        is_commission = #{isCommission,jdbcType=BIT},
      </if>
      <if test="commissionRate != null" >
        commission_rate = #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="forsaleAt != null" >
        forsale_at = #{forsaleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="onsaleAt != null" >
        onsale_at = #{onsaleAt,jdbcType=TIMESTAMP},
      </if>
      <if test="instockAt != null" >
        instock_at = #{instockAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fakeSales != null" >
        fake_sales = #{fakeSales,jdbcType=BIGINT},
      </if>
      <if test="isdelay != null" >
        isDelay = #{isdelay,jdbcType=TINYINT},
      </if>
      <if test="delaydays != null" >
        delayDays = #{delaydays,jdbcType=INTEGER},
      </if>
      <if test="updateLock != null" >
        update_lock = #{updateLock,jdbcType=BIT},
      </if>
      <if test="synchronousflag != null" >
        synchronousFlag = #{synchronousflag,jdbcType=VARCHAR},
      </if>
      <if test="thirdItemId != null" >
        third_item_id = #{thirdItemId,jdbcType=VARCHAR},
      </if>
      <if test="partnerProductId != null" >
        partner_product_id = #{partnerProductId,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.test.model.Product" >
    update vdlm_product
    set user_id = #{userId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      img_width = #{imgWidth,jdbcType=INTEGER},
      img_height = #{imgHeight,jdbcType=INTEGER},
      desc_img = #{descImg,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      postage = #{postage,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=BIGINT},
      sales = #{sales,jdbcType=BIGINT},
      archive = #{archive,jdbcType=BIT},
      recommend = #{recommend,jdbcType=TINYINT},
      recommend_at = #{recommendAt,jdbcType=TIMESTAMP},
      discount = #{discount,jdbcType=DECIMAL},
      is_commission = #{isCommission,jdbcType=BIT},
      commission_rate = #{commissionRate,jdbcType=DECIMAL},
      forsale_at = #{forsaleAt,jdbcType=TIMESTAMP},
      onsale_at = #{onsaleAt,jdbcType=TIMESTAMP},
      instock_at = #{instockAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      fake_sales = #{fakeSales,jdbcType=BIGINT},
      isDelay = #{isdelay,jdbcType=TINYINT},
      delayDays = #{delaydays,jdbcType=INTEGER},
      update_lock = #{updateLock,jdbcType=BIT},
      synchronousFlag = #{synchronousflag,jdbcType=VARCHAR},
      third_item_id = #{thirdItemId,jdbcType=VARCHAR},
      partner_product_id = #{partnerProductId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.model.Product" >
    update vdlm_product
    set user_id = #{userId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      img_width = #{imgWidth,jdbcType=INTEGER},
      img_height = #{imgHeight,jdbcType=INTEGER},
      desc_img = #{descImg,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      postage = #{postage,jdbcType=DECIMAL},
      amount = #{amount,jdbcType=BIGINT},
      sales = #{sales,jdbcType=BIGINT},
      archive = #{archive,jdbcType=BIT},
      recommend = #{recommend,jdbcType=TINYINT},
      recommend_at = #{recommendAt,jdbcType=TIMESTAMP},
      discount = #{discount,jdbcType=DECIMAL},
      is_commission = #{isCommission,jdbcType=BIT},
      commission_rate = #{commissionRate,jdbcType=DECIMAL},
      forsale_at = #{forsaleAt,jdbcType=TIMESTAMP},
      onsale_at = #{onsaleAt,jdbcType=TIMESTAMP},
      instock_at = #{instockAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      fake_sales = #{fakeSales,jdbcType=BIGINT},
      isDelay = #{isdelay,jdbcType=TINYINT},
      delayDays = #{delaydays,jdbcType=INTEGER},
      update_lock = #{updateLock,jdbcType=BIT},
      synchronousFlag = #{synchronousflag,jdbcType=VARCHAR},
      third_item_id = #{thirdItemId,jdbcType=VARCHAR},
      partner_product_id = #{partnerProductId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>